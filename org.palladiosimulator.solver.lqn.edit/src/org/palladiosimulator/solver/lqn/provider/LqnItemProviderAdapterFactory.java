/**
 */
package org.palladiosimulator.solver.lqn.provider;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;
import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;
import org.palladiosimulator.solver.lqn.util.LqnAdapterFactory;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers. The
 * adapters generated by this factory convert EMF adapter notifications into calls to
 * {@link #fireNotifyChanged fireNotifyChanged}. The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances. <!-- begin-user-doc --> <!--
 * end-user-doc -->
 *
 * @generated
 */
public class LqnItemProviderAdapterFactory extends LqnAdapterFactory
        implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {

    /**
     * This keeps track of the root adapter factory that delegates to this adapter factory. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected ComposedAdapterFactory parentAdapterFactory;

    /**
     * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected IChangeNotifier changeNotifier = new ChangeNotifier();

    /**
     * This keeps track of all the supported types checked by {@link #isFactoryForType
     * isFactoryForType}. <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected Collection<Object> supportedTypes = new ArrayList<Object>();

    /**
     * This constructs an instance. <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    public LqnItemProviderAdapterFactory() {
        this.supportedTypes.add(IEditingDomainItemProvider.class);
        this.supportedTypes.add(IStructuredItemContentProvider.class);
        this.supportedTypes.add(ITreeItemContentProvider.class);
        this.supportedTypes.add(IItemLabelProvider.class);
        this.supportedTypes.add(IItemPropertySource.class);
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.palladiosimulator.solver.lqn.ActivityDefBase} instances. <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     *
     * @generated
     */
    protected ActivityDefBaseItemProvider activityDefBaseItemProvider;

    /**
     * This creates an adapter for a {@link org.palladiosimulator.solver.lqn.ActivityDefBase}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createActivityDefBaseAdapter() {
        if (this.activityDefBaseItemProvider == null) {
            this.activityDefBaseItemProvider = new ActivityDefBaseItemProvider(this);
        }

        return this.activityDefBaseItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.palladiosimulator.solver.lqn.ActivityDefType} instances. <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     *
     * @generated
     */
    protected ActivityDefTypeItemProvider activityDefTypeItemProvider;

    /**
     * This creates an adapter for a {@link org.palladiosimulator.solver.lqn.ActivityDefType}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createActivityDefTypeAdapter() {
        if (this.activityDefTypeItemProvider == null) {
            this.activityDefTypeItemProvider = new ActivityDefTypeItemProvider(this);
        }

        return this.activityDefTypeItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.palladiosimulator.solver.lqn.ActivityGraphBase} instances. <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     *
     * @generated
     */
    protected ActivityGraphBaseItemProvider activityGraphBaseItemProvider;

    /**
     * This creates an adapter for a {@link org.palladiosimulator.solver.lqn.ActivityGraphBase}.
     * <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createActivityGraphBaseAdapter() {
        if (this.activityGraphBaseItemProvider == null) {
            this.activityGraphBaseItemProvider = new ActivityGraphBaseItemProvider(this);
        }

        return this.activityGraphBaseItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.palladiosimulator.solver.lqn.ActivityListType} instances. <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     *
     * @generated
     */
    protected ActivityListTypeItemProvider activityListTypeItemProvider;

    /**
     * This creates an adapter for a {@link org.palladiosimulator.solver.lqn.ActivityListType}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createActivityListTypeAdapter() {
        if (this.activityListTypeItemProvider == null) {
            this.activityListTypeItemProvider = new ActivityListTypeItemProvider(this);
        }

        return this.activityListTypeItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.palladiosimulator.solver.lqn.ActivityLoopListType} instances. <!-- begin-user-doc
     * --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected ActivityLoopListTypeItemProvider activityLoopListTypeItemProvider;

    /**
     * This creates an adapter for a {@link org.palladiosimulator.solver.lqn.ActivityLoopListType}.
     * <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createActivityLoopListTypeAdapter() {
        if (this.activityLoopListTypeItemProvider == null) {
            this.activityLoopListTypeItemProvider = new ActivityLoopListTypeItemProvider(this);
        }

        return this.activityLoopListTypeItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.palladiosimulator.solver.lqn.ActivityLoopType} instances. <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     *
     * @generated
     */
    protected ActivityLoopTypeItemProvider activityLoopTypeItemProvider;

    /**
     * This creates an adapter for a {@link org.palladiosimulator.solver.lqn.ActivityLoopType}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createActivityLoopTypeAdapter() {
        if (this.activityLoopTypeItemProvider == null) {
            this.activityLoopTypeItemProvider = new ActivityLoopTypeItemProvider(this);
        }

        return this.activityLoopTypeItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.palladiosimulator.solver.lqn.ActivityMakingCallType} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected ActivityMakingCallTypeItemProvider activityMakingCallTypeItemProvider;

    /**
     * This creates an adapter for a {@link org.palladiosimulator.solver.lqn.ActivityMakingCallType}
     * . <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createActivityMakingCallTypeAdapter() {
        if (this.activityMakingCallTypeItemProvider == null) {
            this.activityMakingCallTypeItemProvider = new ActivityMakingCallTypeItemProvider(this);
        }

        return this.activityMakingCallTypeItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.palladiosimulator.solver.lqn.ActivityOrType} instances. <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     *
     * @generated
     */
    protected ActivityOrTypeItemProvider activityOrTypeItemProvider;

    /**
     * This creates an adapter for a {@link org.palladiosimulator.solver.lqn.ActivityOrType}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createActivityOrTypeAdapter() {
        if (this.activityOrTypeItemProvider == null) {
            this.activityOrTypeItemProvider = new ActivityOrTypeItemProvider(this);
        }

        return this.activityOrTypeItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.palladiosimulator.solver.lqn.ActivityPhasesType} instances. <!-- begin-user-doc
     * --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected ActivityPhasesTypeItemProvider activityPhasesTypeItemProvider;

    /**
     * This creates an adapter for a {@link org.palladiosimulator.solver.lqn.ActivityPhasesType}.
     * <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createActivityPhasesTypeAdapter() {
        if (this.activityPhasesTypeItemProvider == null) {
            this.activityPhasesTypeItemProvider = new ActivityPhasesTypeItemProvider(this);
        }

        return this.activityPhasesTypeItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.palladiosimulator.solver.lqn.ActivityType} instances. <!-- begin-user-doc --> <!--
     * end-user-doc -->
     *
     * @generated
     */
    protected ActivityTypeItemProvider activityTypeItemProvider;

    /**
     * This creates an adapter for a {@link org.palladiosimulator.solver.lqn.ActivityType}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createActivityTypeAdapter() {
        if (this.activityTypeItemProvider == null) {
            this.activityTypeItemProvider = new ActivityTypeItemProvider(this);
        }

        return this.activityTypeItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.palladiosimulator.solver.lqn.AndJoinListType} instances. <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     *
     * @generated
     */
    protected AndJoinListTypeItemProvider andJoinListTypeItemProvider;

    /**
     * This creates an adapter for a {@link org.palladiosimulator.solver.lqn.AndJoinListType}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createAndJoinListTypeAdapter() {
        if (this.andJoinListTypeItemProvider == null) {
            this.andJoinListTypeItemProvider = new AndJoinListTypeItemProvider(this);
        }

        return this.andJoinListTypeItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.palladiosimulator.solver.lqn.AsynchCallType} instances. <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     *
     * @generated
     */
    protected AsynchCallTypeItemProvider asynchCallTypeItemProvider;

    /**
     * This creates an adapter for a {@link org.palladiosimulator.solver.lqn.AsynchCallType}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createAsynchCallTypeAdapter() {
        if (this.asynchCallTypeItemProvider == null) {
            this.asynchCallTypeItemProvider = new AsynchCallTypeItemProvider(this);
        }

        return this.asynchCallTypeItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.palladiosimulator.solver.lqn.BindType} instances. <!-- begin-user-doc --> <!--
     * end-user-doc -->
     *
     * @generated
     */
    protected BindTypeItemProvider bindTypeItemProvider;

    /**
     * This creates an adapter for a {@link org.palladiosimulator.solver.lqn.BindType}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createBindTypeAdapter() {
        if (this.bindTypeItemProvider == null) {
            this.bindTypeItemProvider = new BindTypeItemProvider(this);
        }

        return this.bindTypeItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.palladiosimulator.solver.lqn.CallListType} instances. <!-- begin-user-doc --> <!--
     * end-user-doc -->
     *
     * @generated
     */
    protected CallListTypeItemProvider callListTypeItemProvider;

    /**
     * This creates an adapter for a {@link org.palladiosimulator.solver.lqn.CallListType}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createCallListTypeAdapter() {
        if (this.callListTypeItemProvider == null) {
            this.callListTypeItemProvider = new CallListTypeItemProvider(this);
        }

        return this.callListTypeItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.palladiosimulator.solver.lqn.DocumentRoot} instances. <!-- begin-user-doc --> <!--
     * end-user-doc -->
     *
     * @generated
     */
    protected DocumentRootItemProvider documentRootItemProvider;

    /**
     * This creates an adapter for a {@link org.palladiosimulator.solver.lqn.DocumentRoot}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createDocumentRootAdapter() {
        if (this.documentRootItemProvider == null) {
            this.documentRootItemProvider = new DocumentRootItemProvider(this);
        }

        return this.documentRootItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.palladiosimulator.solver.lqn.EntryActivityDefType} instances. <!-- begin-user-doc
     * --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected EntryActivityDefTypeItemProvider entryActivityDefTypeItemProvider;

    /**
     * This creates an adapter for a {@link org.palladiosimulator.solver.lqn.EntryActivityDefType}.
     * <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createEntryActivityDefTypeAdapter() {
        if (this.entryActivityDefTypeItemProvider == null) {
            this.entryActivityDefTypeItemProvider = new EntryActivityDefTypeItemProvider(this);
        }

        return this.entryActivityDefTypeItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.palladiosimulator.solver.lqn.EntryActivityGraph} instances. <!-- begin-user-doc
     * --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected EntryActivityGraphItemProvider entryActivityGraphItemProvider;

    /**
     * This creates an adapter for a {@link org.palladiosimulator.solver.lqn.EntryActivityGraph}.
     * <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createEntryActivityGraphAdapter() {
        if (this.entryActivityGraphItemProvider == null) {
            this.entryActivityGraphItemProvider = new EntryActivityGraphItemProvider(this);
        }

        return this.entryActivityGraphItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.palladiosimulator.solver.lqn.EntryMakingCallType} instances. <!-- begin-user-doc
     * --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected EntryMakingCallTypeItemProvider entryMakingCallTypeItemProvider;

    /**
     * This creates an adapter for a {@link org.palladiosimulator.solver.lqn.EntryMakingCallType}.
     * <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createEntryMakingCallTypeAdapter() {
        if (this.entryMakingCallTypeItemProvider == null) {
            this.entryMakingCallTypeItemProvider = new EntryMakingCallTypeItemProvider(this);
        }

        return this.entryMakingCallTypeItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.palladiosimulator.solver.lqn.EntryType} instances. <!-- begin-user-doc --> <!--
     * end-user-doc -->
     *
     * @generated
     */
    protected EntryTypeItemProvider entryTypeItemProvider;

    /**
     * This creates an adapter for a {@link org.palladiosimulator.solver.lqn.EntryType}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createEntryTypeAdapter() {
        if (this.entryTypeItemProvider == null) {
            this.entryTypeItemProvider = new EntryTypeItemProvider(this);
        }

        return this.entryTypeItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.palladiosimulator.solver.lqn.FirstPlotType} instances. <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     *
     * @generated
     */
    protected FirstPlotTypeItemProvider firstPlotTypeItemProvider;

    /**
     * This creates an adapter for a {@link org.palladiosimulator.solver.lqn.FirstPlotType}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createFirstPlotTypeAdapter() {
        if (this.firstPlotTypeItemProvider == null) {
            this.firstPlotTypeItemProvider = new FirstPlotTypeItemProvider(this);
        }

        return this.firstPlotTypeItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.palladiosimulator.solver.lqn.HistogramBinType} instances. <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     *
     * @generated
     */
    protected HistogramBinTypeItemProvider histogramBinTypeItemProvider;

    /**
     * This creates an adapter for a {@link org.palladiosimulator.solver.lqn.HistogramBinType}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createHistogramBinTypeAdapter() {
        if (this.histogramBinTypeItemProvider == null) {
            this.histogramBinTypeItemProvider = new HistogramBinTypeItemProvider(this);
        }

        return this.histogramBinTypeItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.palladiosimulator.solver.lqn.InPortType} instances. <!-- begin-user-doc --> <!--
     * end-user-doc -->
     *
     * @generated
     */
    protected InPortTypeItemProvider inPortTypeItemProvider;

    /**
     * This creates an adapter for a {@link org.palladiosimulator.solver.lqn.InPortType}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createInPortTypeAdapter() {
        if (this.inPortTypeItemProvider == null) {
            this.inPortTypeItemProvider = new InPortTypeItemProvider(this);
        }

        return this.inPortTypeItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.palladiosimulator.solver.lqn.InterfaceType} instances. <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     *
     * @generated
     */
    protected InterfaceTypeItemProvider interfaceTypeItemProvider;

    /**
     * This creates an adapter for a {@link org.palladiosimulator.solver.lqn.InterfaceType}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createInterfaceTypeAdapter() {
        if (this.interfaceTypeItemProvider == null) {
            this.interfaceTypeItemProvider = new InterfaceTypeItemProvider(this);
        }

        return this.interfaceTypeItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.palladiosimulator.solver.lqn.LqnCoreType} instances. <!-- begin-user-doc --> <!--
     * end-user-doc -->
     *
     * @generated
     */
    protected LqnCoreTypeItemProvider lqnCoreTypeItemProvider;

    /**
     * This creates an adapter for a {@link org.palladiosimulator.solver.lqn.LqnCoreType}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createLqnCoreTypeAdapter() {
        if (this.lqnCoreTypeItemProvider == null) {
            this.lqnCoreTypeItemProvider = new LqnCoreTypeItemProvider(this);
        }

        return this.lqnCoreTypeItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.palladiosimulator.solver.lqn.LqnModelType} instances. <!-- begin-user-doc --> <!--
     * end-user-doc -->
     *
     * @generated
     */
    protected LqnModelTypeItemProvider lqnModelTypeItemProvider;

    /**
     * This creates an adapter for a {@link org.palladiosimulator.solver.lqn.LqnModelType}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createLqnModelTypeAdapter() {
        if (this.lqnModelTypeItemProvider == null) {
            this.lqnModelTypeItemProvider = new LqnModelTypeItemProvider(this);
        }

        return this.lqnModelTypeItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.palladiosimulator.solver.lqn.MakingCallType} instances. <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     *
     * @generated
     */
    protected MakingCallTypeItemProvider makingCallTypeItemProvider;

    /**
     * This creates an adapter for a {@link org.palladiosimulator.solver.lqn.MakingCallType}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createMakingCallTypeAdapter() {
        if (this.makingCallTypeItemProvider == null) {
            this.makingCallTypeItemProvider = new MakingCallTypeItemProvider(this);
        }

        return this.makingCallTypeItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.palladiosimulator.solver.lqn.OrListType} instances. <!-- begin-user-doc --> <!--
     * end-user-doc -->
     *
     * @generated
     */
    protected OrListTypeItemProvider orListTypeItemProvider;

    /**
     * This creates an adapter for a {@link org.palladiosimulator.solver.lqn.OrListType}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createOrListTypeAdapter() {
        if (this.orListTypeItemProvider == null) {
            this.orListTypeItemProvider = new OrListTypeItemProvider(this);
        }

        return this.orListTypeItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.palladiosimulator.solver.lqn.OutPortType} instances. <!-- begin-user-doc --> <!--
     * end-user-doc -->
     *
     * @generated
     */
    protected OutPortTypeItemProvider outPortTypeItemProvider;

    /**
     * This creates an adapter for a {@link org.palladiosimulator.solver.lqn.OutPortType}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createOutPortTypeAdapter() {
        if (this.outPortTypeItemProvider == null) {
            this.outPortTypeItemProvider = new OutPortTypeItemProvider(this);
        }

        return this.outPortTypeItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.palladiosimulator.solver.lqn.OutputDistributionType} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected OutputDistributionTypeItemProvider outputDistributionTypeItemProvider;

    /**
     * This creates an adapter for a {@link org.palladiosimulator.solver.lqn.OutputDistributionType}
     * . <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createOutputDistributionTypeAdapter() {
        if (this.outputDistributionTypeItemProvider == null) {
            this.outputDistributionTypeItemProvider = new OutputDistributionTypeItemProvider(this);
        }

        return this.outputDistributionTypeItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.palladiosimulator.solver.lqn.OutputEntryDistributionType} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected OutputEntryDistributionTypeItemProvider outputEntryDistributionTypeItemProvider;

    /**
     * This creates an adapter for a
     * {@link org.palladiosimulator.solver.lqn.OutputEntryDistributionType}. <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createOutputEntryDistributionTypeAdapter() {
        if (this.outputEntryDistributionTypeItemProvider == null) {
            this.outputEntryDistributionTypeItemProvider = new OutputEntryDistributionTypeItemProvider(this);
        }

        return this.outputEntryDistributionTypeItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.palladiosimulator.solver.lqn.OutputResultForwardingANDJoinDelay} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected OutputResultForwardingANDJoinDelayItemProvider outputResultForwardingANDJoinDelayItemProvider;

    /**
     * This creates an adapter for a
     * {@link org.palladiosimulator.solver.lqn.OutputResultForwardingANDJoinDelay}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createOutputResultForwardingANDJoinDelayAdapter() {
        if (this.outputResultForwardingANDJoinDelayItemProvider == null) {
            this.outputResultForwardingANDJoinDelayItemProvider = new OutputResultForwardingANDJoinDelayItemProvider(
                    this);
        }

        return this.outputResultForwardingANDJoinDelayItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.palladiosimulator.solver.lqn.OutputResultType} instances. <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     *
     * @generated
     */
    protected OutputResultTypeItemProvider outputResultTypeItemProvider;

    /**
     * This creates an adapter for a {@link org.palladiosimulator.solver.lqn.OutputResultType}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createOutputResultTypeAdapter() {
        if (this.outputResultTypeItemProvider == null) {
            this.outputResultTypeItemProvider = new OutputResultTypeItemProvider(this);
        }

        return this.outputResultTypeItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.palladiosimulator.solver.lqn.ParameterType} instances. <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     *
     * @generated
     */
    protected ParameterTypeItemProvider parameterTypeItemProvider;

    /**
     * This creates an adapter for a {@link org.palladiosimulator.solver.lqn.ParameterType}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createParameterTypeAdapter() {
        if (this.parameterTypeItemProvider == null) {
            this.parameterTypeItemProvider = new ParameterTypeItemProvider(this);
        }

        return this.parameterTypeItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.palladiosimulator.solver.lqn.ParaType} instances. <!-- begin-user-doc --> <!--
     * end-user-doc -->
     *
     * @generated
     */
    protected ParaTypeItemProvider paraTypeItemProvider;

    /**
     * This creates an adapter for a {@link org.palladiosimulator.solver.lqn.ParaType}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createParaTypeAdapter() {
        if (this.paraTypeItemProvider == null) {
            this.paraTypeItemProvider = new ParaTypeItemProvider(this);
        }

        return this.paraTypeItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.palladiosimulator.solver.lqn.PhaseActivities} instances. <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     *
     * @generated
     */
    protected PhaseActivitiesItemProvider phaseActivitiesItemProvider;

    /**
     * This creates an adapter for a {@link org.palladiosimulator.solver.lqn.PhaseActivities}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createPhaseActivitiesAdapter() {
        if (this.phaseActivitiesItemProvider == null) {
            this.phaseActivitiesItemProvider = new PhaseActivitiesItemProvider(this);
        }

        return this.phaseActivitiesItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.palladiosimulator.solver.lqn.PlotControlType} instances. <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     *
     * @generated
     */
    protected PlotControlTypeItemProvider plotControlTypeItemProvider;

    /**
     * This creates an adapter for a {@link org.palladiosimulator.solver.lqn.PlotControlType}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createPlotControlTypeAdapter() {
        if (this.plotControlTypeItemProvider == null) {
            this.plotControlTypeItemProvider = new PlotControlTypeItemProvider(this);
        }

        return this.plotControlTypeItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.palladiosimulator.solver.lqn.PlotType} instances. <!-- begin-user-doc --> <!--
     * end-user-doc -->
     *
     * @generated
     */
    protected PlotTypeItemProvider plotTypeItemProvider;

    /**
     * This creates an adapter for a {@link org.palladiosimulator.solver.lqn.PlotType}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createPlotTypeAdapter() {
        if (this.plotTypeItemProvider == null) {
            this.plotTypeItemProvider = new PlotTypeItemProvider(this);
        }

        return this.plotTypeItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.palladiosimulator.solver.lqn.PortBindingType} instances. <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     *
     * @generated
     */
    protected PortBindingTypeItemProvider portBindingTypeItemProvider;

    /**
     * This creates an adapter for a {@link org.palladiosimulator.solver.lqn.PortBindingType}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createPortBindingTypeAdapter() {
        if (this.portBindingTypeItemProvider == null) {
            this.portBindingTypeItemProvider = new PortBindingTypeItemProvider(this);
        }

        return this.portBindingTypeItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.palladiosimulator.solver.lqn.PragmaType} instances. <!-- begin-user-doc --> <!--
     * end-user-doc -->
     *
     * @generated
     */
    protected PragmaTypeItemProvider pragmaTypeItemProvider;

    /**
     * This creates an adapter for a {@link org.palladiosimulator.solver.lqn.PragmaType}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createPragmaTypeAdapter() {
        if (this.pragmaTypeItemProvider == null) {
            this.pragmaTypeItemProvider = new PragmaTypeItemProvider(this);
        }

        return this.pragmaTypeItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.palladiosimulator.solver.lqn.PrecedenceType} instances. <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     *
     * @generated
     */
    protected PrecedenceTypeItemProvider precedenceTypeItemProvider;

    /**
     * This creates an adapter for a {@link org.palladiosimulator.solver.lqn.PrecedenceType}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createPrecedenceTypeAdapter() {
        if (this.precedenceTypeItemProvider == null) {
            this.precedenceTypeItemProvider = new PrecedenceTypeItemProvider(this);
        }

        return this.precedenceTypeItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.palladiosimulator.solver.lqn.ProcessorBindingType} instances. <!-- begin-user-doc
     * --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected ProcessorBindingTypeItemProvider processorBindingTypeItemProvider;

    /**
     * This creates an adapter for a {@link org.palladiosimulator.solver.lqn.ProcessorBindingType}.
     * <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createProcessorBindingTypeAdapter() {
        if (this.processorBindingTypeItemProvider == null) {
            this.processorBindingTypeItemProvider = new ProcessorBindingTypeItemProvider(this);
        }

        return this.processorBindingTypeItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.palladiosimulator.solver.lqn.ProcessorType} instances. <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     *
     * @generated
     */
    protected ProcessorTypeItemProvider processorTypeItemProvider;

    /**
     * This creates an adapter for a {@link org.palladiosimulator.solver.lqn.ProcessorType}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createProcessorTypeAdapter() {
        if (this.processorTypeItemProvider == null) {
            this.processorTypeItemProvider = new ProcessorTypeItemProvider(this);
        }

        return this.processorTypeItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.palladiosimulator.solver.lqn.ReplyActivityType} instances. <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     *
     * @generated
     */
    protected ReplyActivityTypeItemProvider replyActivityTypeItemProvider;

    /**
     * This creates an adapter for a {@link org.palladiosimulator.solver.lqn.ReplyActivityType}.
     * <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createReplyActivityTypeAdapter() {
        if (this.replyActivityTypeItemProvider == null) {
            this.replyActivityTypeItemProvider = new ReplyActivityTypeItemProvider(this);
        }

        return this.replyActivityTypeItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.palladiosimulator.solver.lqn.ReplyEntryType} instances. <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     *
     * @generated
     */
    protected ReplyEntryTypeItemProvider replyEntryTypeItemProvider;

    /**
     * This creates an adapter for a {@link org.palladiosimulator.solver.lqn.ReplyEntryType}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createReplyEntryTypeAdapter() {
        if (this.replyEntryTypeItemProvider == null) {
            this.replyEntryTypeItemProvider = new ReplyEntryTypeItemProvider(this);
        }

        return this.replyEntryTypeItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.palladiosimulator.solver.lqn.ResultConf95Type} instances. <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     *
     * @generated
     */
    protected ResultConf95TypeItemProvider resultConf95TypeItemProvider;

    /**
     * This creates an adapter for a {@link org.palladiosimulator.solver.lqn.ResultConf95Type}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createResultConf95TypeAdapter() {
        if (this.resultConf95TypeItemProvider == null) {
            this.resultConf95TypeItemProvider = new ResultConf95TypeItemProvider(this);
        }

        return this.resultConf95TypeItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.palladiosimulator.solver.lqn.ResultConf95Type1} instances. <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     *
     * @generated
     */
    protected ResultConf95Type1ItemProvider resultConf95Type1ItemProvider;

    /**
     * This creates an adapter for a {@link org.palladiosimulator.solver.lqn.ResultConf95Type1}.
     * <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createResultConf95Type1Adapter() {
        if (this.resultConf95Type1ItemProvider == null) {
            this.resultConf95Type1ItemProvider = new ResultConf95Type1ItemProvider(this);
        }

        return this.resultConf95Type1ItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.palladiosimulator.solver.lqn.ResultConf99Type} instances. <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     *
     * @generated
     */
    protected ResultConf99TypeItemProvider resultConf99TypeItemProvider;

    /**
     * This creates an adapter for a {@link org.palladiosimulator.solver.lqn.ResultConf99Type}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createResultConf99TypeAdapter() {
        if (this.resultConf99TypeItemProvider == null) {
            this.resultConf99TypeItemProvider = new ResultConf99TypeItemProvider(this);
        }

        return this.resultConf99TypeItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.palladiosimulator.solver.lqn.ResultConf99Type1} instances. <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     *
     * @generated
     */
    protected ResultConf99Type1ItemProvider resultConf99Type1ItemProvider;

    /**
     * This creates an adapter for a {@link org.palladiosimulator.solver.lqn.ResultConf99Type1}.
     * <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createResultConf99Type1Adapter() {
        if (this.resultConf99Type1ItemProvider == null) {
            this.resultConf99Type1ItemProvider = new ResultConf99Type1ItemProvider(this);
        }

        return this.resultConf99Type1ItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.palladiosimulator.solver.lqn.ResultGeneralType} instances. <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     *
     * @generated
     */
    protected ResultGeneralTypeItemProvider resultGeneralTypeItemProvider;

    /**
     * This creates an adapter for a {@link org.palladiosimulator.solver.lqn.ResultGeneralType}.
     * <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createResultGeneralTypeAdapter() {
        if (this.resultGeneralTypeItemProvider == null) {
            this.resultGeneralTypeItemProvider = new ResultGeneralTypeItemProvider(this);
        }

        return this.resultGeneralTypeItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.palladiosimulator.solver.lqn.RunControlType} instances. <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     *
     * @generated
     */
    protected RunControlTypeItemProvider runControlTypeItemProvider;

    /**
     * This creates an adapter for a {@link org.palladiosimulator.solver.lqn.RunControlType}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createRunControlTypeAdapter() {
        if (this.runControlTypeItemProvider == null) {
            this.runControlTypeItemProvider = new RunControlTypeItemProvider(this);
        }

        return this.runControlTypeItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.palladiosimulator.solver.lqn.ServiceType} instances. <!-- begin-user-doc --> <!--
     * end-user-doc -->
     *
     * @generated
     */
    protected ServiceTypeItemProvider serviceTypeItemProvider;

    /**
     * This creates an adapter for a {@link org.palladiosimulator.solver.lqn.ServiceType}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createServiceTypeAdapter() {
        if (this.serviceTypeItemProvider == null) {
            this.serviceTypeItemProvider = new ServiceTypeItemProvider(this);
        }

        return this.serviceTypeItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.palladiosimulator.solver.lqn.SingleActivityListType} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected SingleActivityListTypeItemProvider singleActivityListTypeItemProvider;

    /**
     * This creates an adapter for a {@link org.palladiosimulator.solver.lqn.SingleActivityListType}
     * . <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createSingleActivityListTypeAdapter() {
        if (this.singleActivityListTypeItemProvider == null) {
            this.singleActivityListTypeItemProvider = new SingleActivityListTypeItemProvider(this);
        }

        return this.singleActivityListTypeItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.palladiosimulator.solver.lqn.SlotType} instances. <!-- begin-user-doc --> <!--
     * end-user-doc -->
     *
     * @generated
     */
    protected SlotTypeItemProvider slotTypeItemProvider;

    /**
     * This creates an adapter for a {@link org.palladiosimulator.solver.lqn.SlotType}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createSlotTypeAdapter() {
        if (this.slotTypeItemProvider == null) {
            this.slotTypeItemProvider = new SlotTypeItemProvider(this);
        }

        return this.slotTypeItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.palladiosimulator.solver.lqn.SolverParamsType} instances. <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     *
     * @generated
     */
    protected SolverParamsTypeItemProvider solverParamsTypeItemProvider;

    /**
     * This creates an adapter for a {@link org.palladiosimulator.solver.lqn.SolverParamsType}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createSolverParamsTypeAdapter() {
        if (this.solverParamsTypeItemProvider == null) {
            this.solverParamsTypeItemProvider = new SolverParamsTypeItemProvider(this);
        }

        return this.solverParamsTypeItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.palladiosimulator.solver.lqn.SynchCallType} instances. <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     *
     * @generated
     */
    protected SynchCallTypeItemProvider synchCallTypeItemProvider;

    /**
     * This creates an adapter for a {@link org.palladiosimulator.solver.lqn.SynchCallType}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createSynchCallTypeAdapter() {
        if (this.synchCallTypeItemProvider == null) {
            this.synchCallTypeItemProvider = new SynchCallTypeItemProvider(this);
        }

        return this.synchCallTypeItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.palladiosimulator.solver.lqn.TaskActivityGraph} instances. <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     *
     * @generated
     */
    protected TaskActivityGraphItemProvider taskActivityGraphItemProvider;

    /**
     * This creates an adapter for a {@link org.palladiosimulator.solver.lqn.TaskActivityGraph}.
     * <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createTaskActivityGraphAdapter() {
        if (this.taskActivityGraphItemProvider == null) {
            this.taskActivityGraphItemProvider = new TaskActivityGraphItemProvider(this);
        }

        return this.taskActivityGraphItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.palladiosimulator.solver.lqn.TaskType} instances. <!-- begin-user-doc --> <!--
     * end-user-doc -->
     *
     * @generated
     */
    protected TaskTypeItemProvider taskTypeItemProvider;

    /**
     * This creates an adapter for a {@link org.palladiosimulator.solver.lqn.TaskType}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createTaskTypeAdapter() {
        if (this.taskTypeItemProvider == null) {
            this.taskTypeItemProvider = new TaskTypeItemProvider(this);
        }

        return this.taskTypeItemProvider;
    }

    /**
     * This returns the root adapter factory that contains this factory. <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public ComposeableAdapterFactory getRootAdapterFactory() {
        return this.parentAdapterFactory == null ? this : this.parentAdapterFactory.getRootAdapterFactory();
    }

    /**
     * This sets the composed adapter factory that contains this factory. <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public void setParentAdapterFactory(final ComposedAdapterFactory parentAdapterFactory) {
        this.parentAdapterFactory = parentAdapterFactory;
    }

    /**
     * <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public boolean isFactoryForType(final Object type) {
        return this.supportedTypes.contains(type) || super.isFactoryForType(type);
    }

    /**
     * This implementation substitutes the factory itself as the key for the adapter. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter adapt(final Notifier notifier, final Object type) {
        return super.adapt(notifier, this);
    }

    /**
     * <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Object adapt(final Object object, final Object type) {
        if (this.isFactoryForType(type)) {
            final Object adapter = super.adapt(object, type);
            if (!(type instanceof Class<?>) || (((Class<?>) type).isInstance(adapter))) {
                return adapter;
            }
        }

        return null;
    }

    /**
     * This adds a listener. <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public void addListener(final INotifyChangedListener notifyChangedListener) {
        this.changeNotifier.addListener(notifyChangedListener);
    }

    /**
     * This removes a listener. <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public void removeListener(final INotifyChangedListener notifyChangedListener) {
        this.changeNotifier.removeListener(notifyChangedListener);
    }

    /**
     * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public void fireNotifyChanged(final Notification notification) {
        this.changeNotifier.fireNotifyChanged(notification);

        if (this.parentAdapterFactory != null) {
            this.parentAdapterFactory.fireNotifyChanged(notification);
        }
    }

    /**
     * This disposes all of the item providers created by this factory. <!-- begin-user-doc --> <!--
     * end-user-doc -->
     *
     * @generated
     */
    @Override
    public void dispose() {
        if (this.activityDefBaseItemProvider != null) {
            this.activityDefBaseItemProvider.dispose();
        }
        if (this.activityDefTypeItemProvider != null) {
            this.activityDefTypeItemProvider.dispose();
        }
        if (this.activityGraphBaseItemProvider != null) {
            this.activityGraphBaseItemProvider.dispose();
        }
        if (this.activityListTypeItemProvider != null) {
            this.activityListTypeItemProvider.dispose();
        }
        if (this.activityLoopListTypeItemProvider != null) {
            this.activityLoopListTypeItemProvider.dispose();
        }
        if (this.activityLoopTypeItemProvider != null) {
            this.activityLoopTypeItemProvider.dispose();
        }
        if (this.activityMakingCallTypeItemProvider != null) {
            this.activityMakingCallTypeItemProvider.dispose();
        }
        if (this.activityOrTypeItemProvider != null) {
            this.activityOrTypeItemProvider.dispose();
        }
        if (this.activityPhasesTypeItemProvider != null) {
            this.activityPhasesTypeItemProvider.dispose();
        }
        if (this.activityTypeItemProvider != null) {
            this.activityTypeItemProvider.dispose();
        }
        if (this.andJoinListTypeItemProvider != null) {
            this.andJoinListTypeItemProvider.dispose();
        }
        if (this.asynchCallTypeItemProvider != null) {
            this.asynchCallTypeItemProvider.dispose();
        }
        if (this.bindTypeItemProvider != null) {
            this.bindTypeItemProvider.dispose();
        }
        if (this.callListTypeItemProvider != null) {
            this.callListTypeItemProvider.dispose();
        }
        if (this.documentRootItemProvider != null) {
            this.documentRootItemProvider.dispose();
        }
        if (this.entryActivityDefTypeItemProvider != null) {
            this.entryActivityDefTypeItemProvider.dispose();
        }
        if (this.entryActivityGraphItemProvider != null) {
            this.entryActivityGraphItemProvider.dispose();
        }
        if (this.entryMakingCallTypeItemProvider != null) {
            this.entryMakingCallTypeItemProvider.dispose();
        }
        if (this.entryTypeItemProvider != null) {
            this.entryTypeItemProvider.dispose();
        }
        if (this.firstPlotTypeItemProvider != null) {
            this.firstPlotTypeItemProvider.dispose();
        }
        if (this.histogramBinTypeItemProvider != null) {
            this.histogramBinTypeItemProvider.dispose();
        }
        if (this.inPortTypeItemProvider != null) {
            this.inPortTypeItemProvider.dispose();
        }
        if (this.interfaceTypeItemProvider != null) {
            this.interfaceTypeItemProvider.dispose();
        }
        if (this.lqnCoreTypeItemProvider != null) {
            this.lqnCoreTypeItemProvider.dispose();
        }
        if (this.lqnModelTypeItemProvider != null) {
            this.lqnModelTypeItemProvider.dispose();
        }
        if (this.makingCallTypeItemProvider != null) {
            this.makingCallTypeItemProvider.dispose();
        }
        if (this.orListTypeItemProvider != null) {
            this.orListTypeItemProvider.dispose();
        }
        if (this.outPortTypeItemProvider != null) {
            this.outPortTypeItemProvider.dispose();
        }
        if (this.outputDistributionTypeItemProvider != null) {
            this.outputDistributionTypeItemProvider.dispose();
        }
        if (this.outputEntryDistributionTypeItemProvider != null) {
            this.outputEntryDistributionTypeItemProvider.dispose();
        }
        if (this.outputResultForwardingANDJoinDelayItemProvider != null) {
            this.outputResultForwardingANDJoinDelayItemProvider.dispose();
        }
        if (this.outputResultTypeItemProvider != null) {
            this.outputResultTypeItemProvider.dispose();
        }
        if (this.parameterTypeItemProvider != null) {
            this.parameterTypeItemProvider.dispose();
        }
        if (this.paraTypeItemProvider != null) {
            this.paraTypeItemProvider.dispose();
        }
        if (this.phaseActivitiesItemProvider != null) {
            this.phaseActivitiesItemProvider.dispose();
        }
        if (this.plotControlTypeItemProvider != null) {
            this.plotControlTypeItemProvider.dispose();
        }
        if (this.plotTypeItemProvider != null) {
            this.plotTypeItemProvider.dispose();
        }
        if (this.portBindingTypeItemProvider != null) {
            this.portBindingTypeItemProvider.dispose();
        }
        if (this.pragmaTypeItemProvider != null) {
            this.pragmaTypeItemProvider.dispose();
        }
        if (this.precedenceTypeItemProvider != null) {
            this.precedenceTypeItemProvider.dispose();
        }
        if (this.processorBindingTypeItemProvider != null) {
            this.processorBindingTypeItemProvider.dispose();
        }
        if (this.processorTypeItemProvider != null) {
            this.processorTypeItemProvider.dispose();
        }
        if (this.replyActivityTypeItemProvider != null) {
            this.replyActivityTypeItemProvider.dispose();
        }
        if (this.replyEntryTypeItemProvider != null) {
            this.replyEntryTypeItemProvider.dispose();
        }
        if (this.resultConf95TypeItemProvider != null) {
            this.resultConf95TypeItemProvider.dispose();
        }
        if (this.resultConf95Type1ItemProvider != null) {
            this.resultConf95Type1ItemProvider.dispose();
        }
        if (this.resultConf99TypeItemProvider != null) {
            this.resultConf99TypeItemProvider.dispose();
        }
        if (this.resultConf99Type1ItemProvider != null) {
            this.resultConf99Type1ItemProvider.dispose();
        }
        if (this.resultGeneralTypeItemProvider != null) {
            this.resultGeneralTypeItemProvider.dispose();
        }
        if (this.runControlTypeItemProvider != null) {
            this.runControlTypeItemProvider.dispose();
        }
        if (this.serviceTypeItemProvider != null) {
            this.serviceTypeItemProvider.dispose();
        }
        if (this.singleActivityListTypeItemProvider != null) {
            this.singleActivityListTypeItemProvider.dispose();
        }
        if (this.slotTypeItemProvider != null) {
            this.slotTypeItemProvider.dispose();
        }
        if (this.solverParamsTypeItemProvider != null) {
            this.solverParamsTypeItemProvider.dispose();
        }
        if (this.synchCallTypeItemProvider != null) {
            this.synchCallTypeItemProvider.dispose();
        }
        if (this.taskActivityGraphItemProvider != null) {
            this.taskActivityGraphItemProvider.dispose();
        }
        if (this.taskTypeItemProvider != null) {
            this.taskTypeItemProvider.dispose();
        }
    }

}
